version: "3.8"

services:

  db:
    image: postgres:15.1-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_todolist_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      timeout: 5s
      retries: 5
      interval: 3s

  api:
    build:
      context: "."
      dockerfile: "./Dockerfile.dev"
    env_file: .env
    environment:
      POSTGRES_HOST: db
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./core:/opt/core
      - ./goals:/opt/goals
      - ./todolist:/opt/todolist
      - django_static:/opt/static/

  frontend:
    image: sermalenk/skypro-front:lesson-37
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
      - django_static:/usr/share/nginx/html/static

volumes:
  pg_todolist_data:
  django_static:
